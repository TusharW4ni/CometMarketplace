datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Status {
  ONLINE
  OFFLINE
}

model User {
  id             Int        @id @default(autoincrement())
  email          String     @unique
  name           String?
  pronouns       String?
  bio            String?    @db.VarChar(116)
  profilePicture String?
  posts          Post[]
  Reviews        Review[]
  WishList       WishList[]
  Report         Report[]
  status         Status     @default(OFFLINE)
  socketId       String?    @unique
  archived       Boolean    @default(false)
  chats1         Chat[]     @relation("ChatToUser1")
  chats2         Chat[]     @relation("ChatToUser2")
  Message        Message[]
}

model Post {
  id           Int        @id @default(autoincrement())
  title        String?
  desc         String?
  price        Int?
  photosFolder String?
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  WishList     WishList[]
  archived     Boolean    @default(false)
}

model Review {
  id        Int      @id @default(autoincrement())
  comment   String?
  rating    Int?
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

model WishList {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model Report {
  id                Int    @id @default(autoincrement())
  user              User   @relation(fields: [userId], references: [id])
  userId            Int
  url               String
  reportType        String
  reportDescription String
}

model Chat {
  id       Int       @id @default(autoincrement())
  user1    User      @relation("ChatToUser1", fields: [user1Id], references: [id])
  user1Id  Int
  user2    User      @relation("ChatToUser2", fields: [user2Id], references: [id])
  user2Id  Int
  messages Message[]
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  Int
}
